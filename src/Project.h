#pragma once
//----------------- Config -----------------

// Basic Options for the Program. Additional options for all modules can be found in their respective headers
#define BUILD_VERSION		02024		//02.024

#define GLOBAL_CLOCK_SCALE 1			// Use this to scale the clock globally.
										// The Baud Rate of SCI must be changed accordingly if
// SPI - lower means faster
#define SPI_FAST_BAUD_RATE	4			// Faster Baud Rates migth compromise Signal quality.
#define SPI_SLOW_BAUD_RATE	120			// Temperature ADC requires slower Baud rate
#define SPI_FIFO_ISR_LV		1			// Minimum number of samples to be stored in the FiFo before the ISR occures and the data is processed

#ifndef _SINGLE_CH_MODE
	#define ACTIVE_SPI_CNT		3			// Set this to the number of active SPI channels
#else
	#define ACTIVE_SPI_CNT		2
#endif


// EPWM and Timing settings
#define CNV_PERIOD			50			// value*10ns = time between conversions (@200MHz). This time must always >400ns
#define CNV_NUM				20			// number of conversions before the ADC is read
#define CNV_MULT			1			// additional conversion multiplier (up to 3)
										// Use this if (CNV_PERIOD*CNV_NUM)+CNV_NUM-1 > 65535
										// Total number of conversions = (CNV_NUM*CNV_MULT)-2

// Temperature ADC options
#define TEMP_ADC_VREF 	(float)3.3 		// Reference Voltage
#define TEMP_ADC_K	(float)(9.313E-009)	// Temperature ADC sensitivity per v_ref (28 bit and 2,56 measurement range)
#define MV_PER_KELVIN	(float)0.01		// Temperature Sensor sensitivity [V/°C]


// Buffer Options - Note: those values have to be smaller in RAM mode
#ifdef _RAM
	#define FLASH_MODE OFF
	#define USB_BULK_BUFFER_SIZE 	1024	// Number of Bytes to be reserved for each general RX and TX USB Buffer
	#define USB_8BIT_BUFFER_SIZE	512		// Number of Bytes to be reserved for the intermediate USB buffer
	#define SAMPLE_BUFFER_LENGTH 	256		// NUmber of samples that can be stored in the sample ring buffer
#endif

#ifdef _FLASH
	#define FLASH_MODE ON
	#ifndef _SINGLE_CH_MODE
		#define USB_BULK_BUFFER_SIZE 	1024
		#define USB_8BIT_BUFFER_SIZE 	512
		#define SAMPLE_BUFFER_LENGTH 	4095
	#else
		#define USB_BULK_BUFFER_SIZE 	1024
		#define USB_8BIT_BUFFER_SIZE 	512
		#define SAMPLE_BUFFER_LENGTH 	7000
	#endif
#endif

// I2C options
#define I2C_GPIO_READ_ADDR		0x71	// Slave address of the GPIO expander for reading data
#define I2C_GPIO_WRITE_ADDR		0x70	// Slave address of the GPIO expander for writing data

#ifdef _DEBUG
#define DEBUG_MODE ON
#else
#define DEBUG_MODE OFF
#endif

#define ON	0
#define OFF	1

//----------------- Includes -----------------

// Standard Headers
#include <stdbool.h>
#include <stdint.h>
#include <stdbool.h>
#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <stdbool.h>
#include <stdlib.h>
#include <assert.h>


// Generated Files
#include "peripherals/f2837xs_pinmux.h"			// Generated by TI PinMux-Tool


// Include Files provided by TI
#include "F2837xS_Cla_typedefs.h"  // F2837xS CLA Type definitions
#include "F2837xS_device.h"        // F2837xS Headerfile Include File
#include "F2837xS_Examples.h"      // contains macros for various Peripherals
#include "inc/hw_memmap.h"
#include "inc/hw_types.h"
#include "driverlib/sysctl.h"
#include "driverlib/usb_hal.h"
#include "driverlib/systick.h"
#include "usblib/usblib.h"
#include "usblib/device/usbdevice.h"
#include "usblib/device/usbdbulk.h"
#include "usblib/usb-ids.h"


// Modified TI Files
#include "usb/usb_handler.h"
#include "usb/usb_bulk_structs.h"
#include "usb/usb.h"


// Custom Headers
#include "system/isr.h"
#include "system/data_buffers.h"
#include "peripherals/EPWM.h"
//#include "peripherals/DMA.h"
#include "peripherals/GPIO.h"
#include "peripherals/SCI.h"
#include "peripherals/SPI.h"
//#include "peripherals/DAC.h"
#include "peripherals/I2C.h"
#include "usb/usb_commands.h"
#include "math/data_processing.h"
#include "math/function_generator.h"
#include "system/system.h"




extern circular_buffer g_sample_buffer[];		// Container that holds collected Data if g_bStoreData == true





















